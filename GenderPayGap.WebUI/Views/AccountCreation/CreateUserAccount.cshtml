@using GenderPayGap.Core
@using GenderPayGap.WebUI.Models.AccountCreation
@using GovUkDesignSystemDotNet
@model GenderPayGap.WebUI.Models.AccountCreation.CreateUserAccountViewModel
@{
    ViewBag.Title = "Create my account - Gender pay gap reporting service";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        @if (Model.IsPartOfGovUkReportingJourney)
        {
            <p class="govuk-body">
                <a class="govuk-link" href="@Url.Action("AlreadyCreatedAnAccountQuestionGet", "AccountCreation")">Back</a>
            </p>
        }

        @(await Html.GovUkErrorSummaryIfNeeded(
        [
            nameof(CreateUserAccountViewModel.EmailAddress),
            nameof(CreateUserAccountViewModel.ConfirmEmailAddress),
            nameof(CreateUserAccountViewModel.FirstName),
            nameof(CreateUserAccountViewModel.LastName),
            nameof(CreateUserAccountViewModel.JobTitle),
            nameof(CreateUserAccountViewModel.Password),
            nameof(CreateUserAccountViewModel.ConfirmPassword)
        ]))

        <h1 class="govuk-heading-xl">
            Create my account
        </h1>

        <div class="govuk-inset-text">
            You will need to create your own user account even if someone else has
            previously reported your employer's gender pay gap.
        </div>
        <p class="govuk-body">
            After your email address is confirmed you will be able to sign in and add
            employers to your account and report your gender pay gap information.
        </p>
        <p class="govuk-body">
            If you already have a user account, please
            <a href="@(Url.Action("ManageOrganisationsGet", "ManageOrganisations"))"
               class="govuk-link">sign in</a>.
        </p>

        <form method="POST" action="@Url.Action("CreateUserAccountPost", "AccountCreation")" class="govuk-!-margin-top-8">
            @Html.AntiForgeryToken()
            <div class="govuk-form-group">

                <fieldset class="govuk-fieldset govuk-!-margin-bottom-9">
                    <legend class="govuk-fieldset__legend">
                        <h2 class="govuk-heading-m">
                            Email address
                        </h2>
                    </legend>

                    @(await Html.GovUkTextInputFor(
                        m => m.EmailAddress,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("Enter an email address that you can access") },
                            Hint = new() { HtmlOrText = new("The service will send you an email to verify your identity") },
                            Type = "email",
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "email",
                            Spellcheck = false
                        }))
                    @(await Html.GovUkTextInputFor(
                        m => m.ConfirmEmailAddress,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("Confirm your email address") },
                            Type = "email",
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "email",
                            Spellcheck = false
                        }))

                </fieldset>

                <fieldset class="govuk-fieldset govuk-!-margin-bottom-9">
                    <legend class="govuk-fieldset__legend">
                        <h2 class="govuk-heading-m">
                            Your details
                        </h2>
                    </legend>

                    @(await Html.GovUkTextInputFor(
                        m => m.FirstName,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("First name") },
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "given-name"
                        }))
                    @(await Html.GovUkTextInputFor(
                        m => m.LastName,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("Last name") },
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "family-name"
                        }))
                    @(await Html.GovUkTextInputFor(
                        m => m.JobTitle,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("Job title") },
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "organization-title"
                        }))
                </fieldset>

                <fieldset class="govuk-fieldset govuk-!-margin-bottom-9">
                    <legend class="govuk-fieldset__legend">
                        <h2 class="govuk-heading-m">Create a password</h2>
                    </legend>

                    <p class="govuk-body">
                        Your password must be at least 8 characters long.
                    </p>
                    <p class="govuk-body">
                        It must also have at least one of each of the following:
                    </p>
                    <ul class="govuk-list govuk-list--bullet">
                        <li>lower-case letter</li>
                        <li>capital letter and</li>
                        <li>number</li>
                    </ul>

                    @(await Html.GovUkTextInputFor(
                        m => m.Password,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("Password") },
                            Type = "password",
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "new-password"
                        }))
                    @(await Html.GovUkTextInputFor(
                        m => m.ConfirmPassword,
                        new TextInputViewModel
                        {
                            Label = new() { HtmlOrText = new("Confirm your password") },
                            Type = "password",
                            Classes = ["govuk-input--width-20"],
                            Autocomplete = "new-password"
                        }))
                </fieldset>

                <p class="govuk-body">
                    We will only use your contact details to send you information relating
                    to gender pay gap reporting and, with your consent, for the following purpose:
                </p>

                @(await Html.GovUkCheckboxItemFor(
                    m => m.SendUpdates,
                    new CheckboxItemViewModel
                    {
                        Label = new() { HtmlOrText = new("I would like to receive information about webinars, events, and new guidance") }
                    }))
                @(await Html.GovUkCheckboxItemFor(m => m.AllowContact,
                    new CheckboxItemViewModel
                    {
                        Label = new() { HtmlOrText = new("I'm happy to be contacted for feedback on this service and take part in gender pay gap surveys") }
                    }))
                
                @(await Html.GovUkButton(new ButtonViewModel
                {
                    HtmlOrText = new ("Save and Continue"),
                    Classes = ["govuk-!-margin-top-9"],
                    PreventDoubleClick = true,
                }))
                
                @{ var reportingUrl = Url.Action("ManageOrganisationsGet", "ManageOrganisations"); }
                <p class="govuk-body">
                    <a href="@(Model.IsPartOfGovUkReportingJourney ? Global.StartUrl ?? reportingUrl : reportingUrl)"
                       class="govuk-link govuk-!-margin-top-9">
                        Cancel
                    </a>
                </p>
            </div>
            
        </form>
    </div>
</div>
